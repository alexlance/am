#!/bin/bash
[ ${#} -eq 0 ] && echo "usage: [FAST=1] am <hostname> [command]" && exit 1

# filter list based on first few characters of search: name, instance-id, ami, private IP or instance-type
field="Name=tag:Name,Values=*${1}*"
[ "${1:0:2}" == "i-" ]                      && field="Name=instance-id,Values=${1}"
[ "${1:0:4}" == "ami-" ]                    && field="Name=image-id,Values=${1}"
[ $(grep -E '^[0-9]+'     <<< "${1:0:1}") ] && field="Name=private-ip-address,Values=*${1}*"
[ $(grep -E '^[a-z][0-9]' <<< "${1:0:2}") ] && field="Name=instance-type,Values=${1}*"

for region in ${AWS_REGIONS:-$(aws configure get region)}; do
  results+=$(
    aws ec2 describe-instances --region ${region} \
      --filters \
        ${field} \
        "Name=instance-state-name,Values=running" \
      --query \
        "sort_by(Reservations[*].Instances[].{name:Tags[?Key=='Name'] | [0].Value, \
        id:InstanceId, ip:PrivateIpAddress, az:Placement.AvailabilityZone, type:InstanceType, \
        up:LaunchTime, ami:ImageId, role:IamInstanceProfile.Arn}, &name)" \
      --cli-read-timeout 0
  )
done

# run a command remotely on matching hosts
if [ ${#} -gt 1 ]; then
  shift # drop hostname
  cmd="${@}"
  if grep -q "sudo " <<< "${cmd}"; then
    [ "${AM_SUDO_PASSWORD}" ] || read -p "[am] sudo password: " -s AM_SUDO_PASSWORD; echo
    cmd=${cmd//sudo/"echo \"${AM_SUDO_PASSWORD}\" | sudo -p' ' -S"}
  fi
  for i in $(echo ${results} | jq -r '.[] | [.ip, .name] | join(":")'); do
    ip=${i%:*}
    name=${i#*:}
    echo "* ${name} ${ip}: ${@}" > /dev/stderr
    ssh ${FAST:+-f} -t -q -o ConnectTimeout=10 -o StrictHostKeyChecking=no ${ip} -- "${cmd}" || echo "Exited: ${?}"
  done

# else print out the results
else
  echo ${results} | jq -r '.[] | [.name, .id, .ip, .az, .type, .ami, (.role|split("/")?|last), (.up|split("T")?|first) ] | join(" ")' | column -t
fi
