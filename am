#!/bin/bash
prog="${0##*/}"
[ ${#} -eq 0 ] && echo "usage: ${prog} <hostname> [command]" && exit 1
[ ${prog} == "amp" ] && fast="-f"

# change the default region if hostname starts with us-
[ "${1:0:3}" == "us-" ] && region="--region us-west-2"

# filter list based on first few characters of search: name, instance-id, ami, private IP or instance-type
field="Name=tag:Name,Values=*${1}*"
[ "${1:0:2}" == "i-" ]                      && field="Name=instance-id,Values=${1}"
[ "${1:0:4}" == "ami-" ]                    && field="Name=image-id,Values=${1}"
[ $(grep -E '^[0-9]+'     <<< "${1:0:1}") ] && field="Name=private-ip-address,Values=*${1}*"
[ $(grep -E '^[a-z][0-9]' <<< "${1:0:2}") ] && field="Name=instance-type,Values=${1}*"

results=$(
  aws ec2 describe-instances ${region} \
    --filters \
      ${field} \
      "Name=instance-state-name,Values=running" \
    --query \
      "sort_by(Reservations[*].Instances[].{name:Tags[?Key=='Name'] | [0].Value, \
      id:InstanceId, ip:PrivateIpAddress, az:Placement.AvailabilityZone, type:InstanceType, \
      ami:ImageId, role:IamInstanceProfile.Arn}, &name)" \
    --cli-read-timeout 0
)

# print a table of matching hosts if only hostname entered
if [ ${#} -eq 1 ]; then
  echo ${results} | jq -r '.[] | [.name, .id, .ip, .az, .type, .ami, (.role|split("/")?|last) ] | join(" ")' | column -t

# else run a command remotely on matching hosts
else
  shift # drop hostname
  cmd="${@}"
  if grep -q "sudo " <<< "${cmd}"; then
    read -p "[${prog}] sudo password: " -s password; echo
    cmd=${cmd//sudo/"echo \"${password}\" | sudo -p' ' -S"}
  fi
  for i in $(echo ${results} | jq -r '.[] | .ip'); do
    echo "* ${i}: ${@}"
    ssh ${fast} -t -q -o ConnectTimeout=10 -o StrictHostKeyChecking=no ${i} -- "${cmd}" || echo "Exited: ${?}"
  done
fi
