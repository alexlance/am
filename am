#!/bin/bash
[ ${#} -eq 0 ] && echo "usage: am <hostname> [command]" && exit 1

# change the default region if hostname starts with us-
[ "${1:0:3}" == "us-" ] && region="--region us-west-2"

results=$(
  aws ec2 describe-instances ${region} \
    --filters \
      "Name=tag:Name,Values=*${1}*" \
      "Name=instance-state-name,Values=running" \
    --query \
      "sort_by(Reservations[*].Instances[].{name:Tags[?Key=='Name'] | [0].Value, \
      id:InstanceId, ip:PrivateIpAddress, az:Placement.AvailabilityZone, type:InstanceType, \
      ami:ImageId, role:IamInstanceProfile.Arn}, &name)"
)

# print a table of matching hosts if only hostname entered
if [ ${#} -eq 1 ]; then
  echo ${results} | jq -r '.[] | [.name, .id, .ip, .az, .type, .ami, (.role|split("/")?|last) ] | join(" ")' | column -t

# else run a command remotely on matching hosts
else
  shift # drop hostname
  cmd="${@}"
  if grep -q "sudo " <<< "${cmd}"; then
    read -p '[am] sudo password: ' -s password; echo
    cmd=${cmd//sudo/"echo \"${password}\" | sudo -p' ' -S"}
  fi
  for i in $(echo ${results} | jq -r '.[] | .ip'); do
    echo "* ${i}: ${@}"
    ssh -t -q -o ConnectTimeout=10 -o StrictHostKeyChecking=no ${i} -- "${cmd}" || echo "Exited: ${?}"
  done
fi
